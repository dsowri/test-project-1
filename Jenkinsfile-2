pipeline {
    agent any

    stages {
        stage('SCM and Build on Master') {
            agent {
                label "master"
            }
            steps {
                // Checkout source code and build on master
                git branch: 'main', url: 'https://github.com/dsowri/test-project-1.git'
                withMaven(maven: 'Maven 3.9.5') {
                    sh 'mvn clean package'
                }
                // Stash the built artifact(s)
                stash includes: 'target/*.jar, target/*.war', name: 'my-artifacts'
            }
        }

        stage('SonarQube Analysis on Worker Node') {
            agent {
                label "linux-slave"
            }
            steps {
                // Unstash the built artifact(s) on the worker node
                unstash 'my-artifacts'
                
                // Run SonarQube analysis on worker node
                withSonarQubeEnv('sonarqube-server-1') {
                    script {
                        def scannerHome = tool 'sonarqube-scanner-1'; // Ensure this tool name matches the one configured in Jenkins
                        withEnv(["PATH+SONARSCANNER=${scannerHome}/bin"]) {
                            sh 'sonar-scanner'
                        }
                    }
                }
            }
        }
    }
}
